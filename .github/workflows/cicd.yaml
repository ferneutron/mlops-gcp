name: CICD

on:
  push: 
    branches: [ main ]

permissions: 
  contents: read
  packages: read
  statuses: write
  id-token: write

jobs:
  ci:
    name: Check code quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super-linter
        uses: super-linter/super-linter@v6.6.0
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_PYTHON: true
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_PYTHON_ISORT: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    needs: [ci]
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
  cd:
    needs: [ci, test]
    name: Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'GCP Auth'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          project_id: 'gsd-ai-mx-ferneutron'
          workload_identity_provider: 'projects/435551770080/locations/global/workloadIdentityPools/mlops-identity/providers/mlops-provide-v2'
          service_account: 'workshop@gsd-ai-mx-ferneutron.iam.gserviceaccount.com'

      - name: Check if CloudFunctions changed
        uses: dorny/paths-filter@v2.2.1
        id: cloud-functions-change
        with:
            filters: |
                src:
                  - 'functions/**'

      - name: Check if Vertex Pipeline changed
        uses: dorny/paths-filter@v2.2.1
        id: vertex-pipeline-change
        with:
            filters: |
                src:
                  - 'pipelines/**'
      
      - name: 'Submit for Cloud Functions'
        if: steps.cloud-functions-change.outputs.src == 'true'
        run: |
          gcloud builds submit . --config=build/cloudfunction.yaml

      - name: 'Submit for Vertex Pipeline'
        if: steps.vertex-pipeline-change.outputs.src == 'true'
        run: |
          gcloud builds submit . --config=vertexpipeline.yaml